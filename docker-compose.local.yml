  version: '3'

  services:

    api:
      container_name: "${COMPOSE_PROJECT_NAME}_api"
      build:
        context: ./config/api
      working_dir: /var/www
      ports:
        - "${HOST_PORT_API}:9000"
      volumes:
        - ${PATH_TO_API}:/var/www/
      environment:
        TZ: UTC

    nginx:
      container_name: "${COMPOSE_PROJECT_NAME}_nginx"
      image: nginx:alpine
      ports:
        - ${HOST_PORT_NGINX}:80
      volumes:
        - ${PATH_TO_API}:/var/www/api
        - ./config/nginx/log:/var/log/nginx
        - ./config/nginx/api.conf:/etc/nginx/conf.d/default.conf
      environment:
        TZ: UTC
      depends_on:
        - api

    postgres:
      container_name: "${COMPOSE_PROJECT_NAME}_postgresdb"
      image: postgres:15.1
      restart: always
      ports:
        - "${HOST_PORT_POSTGRES}:5432"
      environment:
        - POSTGRES_DB=SharpBot
        - POSTGRES_USER=SharpBot
        - POSTGRES_PASSWORD=pass
      volumes:
        - ./.docker/postgresql-data:/var/lib/postgresql/data

    redis:
      container_name: "${COMPOSE_PROJECT_NAME}_redisdb"
      image: redis:7.0.5
      restart: always
      ports:
        - "${HOST_PORT_REDIS}:6379"
      volumes:
        - ./.docker/redis-data:/data
